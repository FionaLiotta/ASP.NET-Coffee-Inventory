@model SelectListTest.Models.CoffeeViewModel

@{
    ViewData["Title"] = "Edit";
}
<div class="panel narrow fg-gradient">
<h1>Edit</h1>

<hr />
<div class="panel-inner">
    <div>
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="Item.Id" />
            <div class="form-group">
                <label asp-for="Item.Country.Name" class="control-label"></label>
                <input asp-for="Item.Country.Name" value="@Model.Item.Country.Name" id="countryTTA" class="form-control" />
            </div>
            <div class="form-group">
                <label asp-for="Item.Variety.Name" class="control-label"></label>
                <input asp-for="Item.Variety.Name" value="@Model.Item.Variety.Name" id="varietyTTA" class="form-control" />
            </div>
            <div class="form-group">
                <label asp-for="Item.TasteNotes" class="control-label"></label>
                <input asp-for="Item.TasteNotes" class="form-control" />
                <span asp-validation-for="Item.TasteNotes" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Update" class="btn"/>
            </div>
            <div>
                <a asp-action="Index" class="btn">Back</a>
            </div>
        </form>
    </div>
</div>


</div>
@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
<script>
    $(document).ready(function () {
        var bhCountries = new Bloodhound({
            datumTokenizer: Bloodhound.tokenizers.whitespace,
            queryTokenizer: Bloodhound.tokenizers.whitespace,
            prefetch: {
                url: "/Country/List",
                filter: function (results) {
                    var list = [];
                    for (var i in results) {
                        list.push(results[i]["name"])
                    }
                    return list;
                }
            }
        });
        bhCountries.initialize();
        $('#countryTTA').typeahead({
        minLength: 1,
        highlight: true
        },
        {
            name: 'countries',
            source: bhCountries
            });

        var bhVariety = new Bloodhound({
            datumTokenizer: Bloodhound.tokenizers.whitespace,
            queryTokenizer: Bloodhound.tokenizers.whitespace,
            prefetch: {
                url: "/Variety/List",
                filter: function (results) {
                    var list = [];
                    for (var i in results) {
                        list.push(results[i]["name"])
                    }
                    return list;
                }
            }
        });
        bhVariety.initialize();
        $('#varietyTTA').typeahead({
        minLength: 1,
        highlight: true
        },
        {
            name: 'Variety',
            source: bhVariety
         });
    });
</script>